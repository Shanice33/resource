vim编辑器的查找与替换
：s/old/new/ 替换当前行第一个old为new
：s/old/new/g 替换当前行所有的old为new

:n,$s/old/new/ 替换第 n 行开始到最后一行中每一行的第一个 old 为 new
:n,$s/old/new/g 替换第 n 行开始到最后一行中每一行所有 old 为 new（n为数字，若n为.则表示从当前行开始到最后一行）

:%s/old/new/（等同于 :g/old/s//new/） 替换每一行的第一个 old 为 new
:%s/old/new/g（等同于 :g/old/s//new/g） 替换每一行中所有 old 为 new

可以使用#或者+作为分隔符，此时中间出现的/不会作为分隔符
:s#old/#new/# 替换当前行第一个 old/ 为 new/
:%s+/oradata/apras/+/user01/apras1+   将每一行的/oradata/apras/替换成/user01/apras1/
g 放在命令末尾，表示对搜索字符串的每次出现进行替换；不加 g，表示只对搜索字符串的首次出现进行替换；
g 放在命令开头，表示对正文中所有行对搜索字符串进行替换操作


/var/log：
/var/log/messages — 包括整体系统信息，其中也包含系统启动期间的日志。此外，mail，cron，daemon，kern和auth等内容也记录在var/log/messages日志中。
/var/log/dmesg — 包含内核缓冲信息（kernel ring buffer）。在系统启动时，会在屏幕上显示许多与硬件有关的信息。可以用dmesg查看它们。
/var/log/auth.log — 包含系统授权信息，包括用户登录和使用的权限机制等。
/var/log/boot.log — 包含系统启动时的日志。
/var/log/daemon.log — 包含各种系统后台守护进程日志信息。
/var/log/dpkg.log – 包括安装或dpkg命令清除软件包的日志。
/var/log/kern.log – 包含内核产生的日志，有助于在定制内核时解决问题。
/var/log/lastlog — 记录所有用户的最近信息。这不是一个ASCII文件，因此需要用lastlog命令查看内容。
/var/log/maillog /var/log/mail.log — 包含来着系统运行电子邮件服务器的日志信息。例如，sendmail日志信息就全部送到这个文件中。
/var/log/user.log — 记录所有等级用户信息的日志。
/var/log/Xorg.x.log — 来自X的日志信息。
/var/log/alternatives.log – 更新替代信息都记录在这个文件中。
/var/log/btmp – 记录所有失败登录信息。使用last命令可以查看btmp文件。例如，”last -f /var/log/btmp | more“。
/var/log/cups — 涉及所有打印信息的日志。
/var/log/anaconda.log — 在安装Linux时，所有安装信息都储存在这个文件中。
/var/log/yum.log — 包含使用yum安装的软件包信息。
/var/log/cron — 每当cron进程开始一个工作时，就会将相关信息记录在这个文件中。
/var/log/secure — 包含验证和授权方面信息。例如，sshd会将所有信息记录（其中包括失败登录）在这里。
/var/log/wtmp或/var/log/utmp — 包含登录信息。使用wtmp可以找出谁正在登陆进入系统，谁使用命令显示这个文件或信息等。
/var/log/faillog – 包含用户登录失败信息。此外，错误登录命令也会记录在本文件中。
/var/log/httpd/或/var/log/apache2 — 包含服务器access_log和error_log信息。
/var/log/lighttpd/ — 包含light HTTPD的access_log和error_log。
/var/log/mail/ –  这个子目录包含邮件服务器的额外日志。
/var/log/prelink/ — 包含.so文件被prelink修改的信息。
/var/log/audit/ — 包含被 Linux audit daemon储存的信息。
/var/log/samba/ – 包含由samba存储的信息。
/var/log/sa/ — 包含每日由sysstat软件包收集的sar文件。
/var/log/sssd/ – 用于守护进程安全服务。


man的级别： 
1：查看命令的帮助 
2：查看可被内核调用的函数的帮助 
3：查看函数和函数库的帮助 
4：查看特殊文件的帮助（主要是/dev目录下的文件） 
5：查看配置文件的帮助 
6：查看游戏的帮助 
7：查看其它杂项的帮助 
8：查看系统管理员可用命令的帮助 
man -f 【命令】–可以查看这个命令有哪些级别

Linux下的输入/输出重定向：
在Linux中，每个打开的文件被赋予一个文件描述符(file descriptor)，包括标准输入（stdin），标准输出（stdout）和标准错误输出（stderr），由0,1,2分别描述。
command &>（>&） file 表示将标准输出（stdout）和标准错误输出（stderr）重定向至指定的文件file中
command > file 2>&1，是由两部分组成。首先command>file表示将标准输出（stdout）重定向到文件file中。2>&1表示将标准错误输出（stderr）输出到文件描述符1指定的位置，即标准输出（stdout）的位置，由于标准输出已经冲定向到文件file中，所以标准错误输出也会重定向到文件file中。
command 2> file 1> file，也可看成是由两部分组成。首先command 2> file，表示将标准错误输出（stderr）重定向到文件file中；1> file，表示将标准输出（stdout）重定向到文件file中。 最终的file中不会包含标准错误输出（stderr）的信息，因为会被之后的标准输出（stdout）覆盖